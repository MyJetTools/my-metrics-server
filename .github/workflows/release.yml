name: Release App
on:
  push:
    tags: "*"

env:
  IMAGE_NAME: myjettools/my-telemetry


jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo ${GITHUB_REF_NAME})

      - name: Updating version
        run: sed -i -e 's/^version = .*/version = "${{ steps.get_version.outputs.VERSION }}"/' Cargo.toml
              
      - run: cargo build --release
      
      - name: Upload artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: my-telemetry-artifact
          path: my-telemetry-artifact.txt
          retention-days: 1
          if-no-files-found: error

  publish:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: actions/checkout@v3

      # - name: Download artifact
      #   # if: inputs.download_artifact_name
      #   uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a #v3.0.2
      #   with:
      #     name: ${{ inputs.download_artifact_name }}

      - name: Docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin   
      - name: Docker Build and Publish
        run: |
          ver=$(cat Cargo.toml | grep -m1 version | grep  -Eo '["\047].*["\047]' | tr -d '"')
          echo $ver
          docker build -t ${IMAGE_NAME}:${{ steps.get_version.outputs.VERSION }} .
          docker push ${IMAGE_NAME}:${{ steps.get_version.outputs.VERSION }}
